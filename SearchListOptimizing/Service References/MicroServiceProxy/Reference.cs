//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SearchListOptimizing.MicroServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SurveyNote", Namespace="http://scb.se/micro/contract/Client/2015/11")]
    [System.SerializableAttribute()]
    public partial class SurveyNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SurveyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Imported {
            get {
                return this.ImportedField;
            }
            set {
                if ((this.ImportedField.Equals(value) != true)) {
                    this.ImportedField = value;
                    this.RaisePropertyChanged("Imported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCBId {
            get {
                return this.SCBIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SCBIdField, value) != true)) {
                    this.SCBIdField = value;
                    this.RaisePropertyChanged("SCBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SurveyId {
            get {
                return this.SurveyIdField;
            }
            set {
                if ((this.SurveyIdField.Equals(value) != true)) {
                    this.SurveyIdField = value;
                    this.RaisePropertyChanged("SurveyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
    [System.SerializableAttribute()]
    public partial class ErrorDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionInformation {
            get {
                return this.ExceptionInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionInformationField, value) != true)) {
                    this.ExceptionInformationField = value;
                    this.RaisePropertyChanged("ExceptionInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectionUnitPeriodOverview", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class CollectionUnitPeriodOverview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.AnswerCollection[] AnswerCollectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionUnitNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.AnswerCollection[] AnswerCollections {
            get {
                return this.AnswerCollectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerCollectionsField, value) != true)) {
                    this.AnswerCollectionsField = value;
                    this.RaisePropertyChanged("AnswerCollections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionUnitName {
            get {
                return this.CollectionUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionUnitNameField, value) != true)) {
                    this.CollectionUnitNameField = value;
                    this.RaisePropertyChanged("CollectionUnitName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerCollection", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class AnswerCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverviewBackgroundVariable[] BackGroundVariablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionRoundShortnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayLongAdditionalStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayLongStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayShortAdditionalStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayShortStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.GroupVariable[] GroupVariablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InMediumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReferenceStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReferenceStopDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScannedImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusAdditionalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusAdditionalCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverviewVariableGroup[] VariableGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverviewVariable[] VariablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverviewBackgroundVariable[] BackGroundVariables {
            get {
                return this.BackGroundVariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.BackGroundVariablesField, value) != true)) {
                    this.BackGroundVariablesField = value;
                    this.RaisePropertyChanged("BackGroundVariables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionRoundShortname {
            get {
                return this.CollectionRoundShortnameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionRoundShortnameField, value) != true)) {
                    this.CollectionRoundShortnameField = value;
                    this.RaisePropertyChanged("CollectionRoundShortname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayLongAdditionalStatusCode {
            get {
                return this.DisplayLongAdditionalStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLongAdditionalStatusCodeField, value) != true)) {
                    this.DisplayLongAdditionalStatusCodeField = value;
                    this.RaisePropertyChanged("DisplayLongAdditionalStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayLongStatusCode {
            get {
                return this.DisplayLongStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayLongStatusCodeField, value) != true)) {
                    this.DisplayLongStatusCodeField = value;
                    this.RaisePropertyChanged("DisplayLongStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayShortAdditionalStatusCode {
            get {
                return this.DisplayShortAdditionalStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayShortAdditionalStatusCodeField, value) != true)) {
                    this.DisplayShortAdditionalStatusCodeField = value;
                    this.RaisePropertyChanged("DisplayShortAdditionalStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayShortStatusCode {
            get {
                return this.DisplayShortStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayShortStatusCodeField, value) != true)) {
                    this.DisplayShortStatusCodeField = value;
                    this.RaisePropertyChanged("DisplayShortStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.GroupVariable[] GroupVariables {
            get {
                return this.GroupVariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupVariablesField, value) != true)) {
                    this.GroupVariablesField = value;
                    this.RaisePropertyChanged("GroupVariables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InMediumDescription {
            get {
                return this.InMediumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InMediumDescriptionField, value) != true)) {
                    this.InMediumDescriptionField = value;
                    this.RaisePropertyChanged("InMediumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReferenceStartDate {
            get {
                return this.ReferenceStartDateField;
            }
            set {
                if ((this.ReferenceStartDateField.Equals(value) != true)) {
                    this.ReferenceStartDateField = value;
                    this.RaisePropertyChanged("ReferenceStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReferenceStopDate {
            get {
                return this.ReferenceStopDateField;
            }
            set {
                if ((this.ReferenceStopDateField.Equals(value) != true)) {
                    this.ReferenceStopDateField = value;
                    this.RaisePropertyChanged("ReferenceStopDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScannedImagePath {
            get {
                return this.ScannedImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ScannedImagePathField, value) != true)) {
                    this.ScannedImagePathField = value;
                    this.RaisePropertyChanged("ScannedImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusAdditionalCode {
            get {
                return this.StatusAdditionalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusAdditionalCodeField, value) != true)) {
                    this.StatusAdditionalCodeField = value;
                    this.RaisePropertyChanged("StatusAdditionalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusAdditionalCodeDescription {
            get {
                return this.StatusAdditionalCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusAdditionalCodeDescriptionField, value) != true)) {
                    this.StatusAdditionalCodeDescriptionField = value;
                    this.RaisePropertyChanged("StatusAdditionalCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCodeDescription {
            get {
                return this.StatusCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeDescriptionField, value) != true)) {
                    this.StatusCodeDescriptionField = value;
                    this.RaisePropertyChanged("StatusCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverviewVariableGroup[] VariableGroups {
            get {
                return this.VariableGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableGroupsField, value) != true)) {
                    this.VariableGroupsField = value;
                    this.RaisePropertyChanged("VariableGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverviewVariable[] Variables {
            get {
                return this.VariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablesField, value) != true)) {
                    this.VariablesField = value;
                    this.RaisePropertyChanged("Variables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverviewBackgroundVariable", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverviewBackgroundVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Show {
            get {
                return this.ShowField;
            }
            set {
                if ((this.ShowField.Equals(value) != true)) {
                    this.ShowField = value;
                    this.RaisePropertyChanged("Show");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupVariable", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class GroupVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Show {
            get {
                return this.ShowField;
            }
            set {
                if ((this.ShowField.Equals(value) != true)) {
                    this.ShowField = value;
                    this.RaisePropertyChanged("Show");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverviewVariableGroup", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverviewVariableGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverViewGroupVariableRow[] VariableRowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverviewGroupVariable[] VariablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverViewGroupVariableRow[] VariableRows {
            get {
                return this.VariableRowsField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableRowsField, value) != true)) {
                    this.VariableRowsField = value;
                    this.RaisePropertyChanged("VariableRows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverviewGroupVariable[] Variables {
            get {
                return this.VariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablesField, value) != true)) {
                    this.VariablesField = value;
                    this.RaisePropertyChanged("Variables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverviewVariable", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverviewVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeOfValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Show {
            get {
                return this.ShowField;
            }
            set {
                if ((this.ShowField.Equals(value) != true)) {
                    this.ShowField = value;
                    this.RaisePropertyChanged("Show");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeOfValue {
            get {
                return this.TypeOfValueField;
            }
            set {
                if ((this.TypeOfValueField.Equals(value) != true)) {
                    this.TypeOfValueField = value;
                    this.RaisePropertyChanged("TypeOfValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverViewGroupVariableRow", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverViewGroupVariableRow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RowIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.OverviewGroupVariableCell[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RowIndex {
            get {
                return this.RowIndexField;
            }
            set {
                if ((this.RowIndexField.Equals(value) != true)) {
                    this.RowIndexField = value;
                    this.RaisePropertyChanged("RowIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.OverviewGroupVariableCell[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverviewGroupVariable", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverviewGroupVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IdentifyingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Identifying {
            get {
                return this.IdentifyingField;
            }
            set {
                if ((this.IdentifyingField.Equals(value) != true)) {
                    this.IdentifyingField = value;
                    this.RaisePropertyChanged("Identifying");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverviewGroupVariableCell", Namespace="http://schemas.datacontract.org/2004/07/Micro.Contract.Client.DataContract")]
    [System.SerializableAttribute()]
    public partial class OverviewGroupVariableCell : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeOfValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeOfValue {
            get {
                return this.TypeOfValueField;
            }
            set {
                if ((this.TypeOfValueField.Equals(value) != true)) {
                    this.TypeOfValueField = value;
                    this.RaisePropertyChanged("TypeOfValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchListItem", Namespace="http://scb.se/il/contract/Client/2012/09")]
    [System.SerializableAttribute()]
    public partial class SearchListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemberInGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScbIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SearchListOptimizing.MicroServiceProxy.SearchVariable[] SearchVariablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalStatus {
            get {
                return this.AdditionalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalStatusField, value) != true)) {
                    this.AdditionalStatusField = value;
                    this.RaisePropertyChanged("AdditionalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemberInGroup {
            get {
                return this.MemberInGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberInGroupField, value) != true)) {
                    this.MemberInGroupField = value;
                    this.RaisePropertyChanged("MemberInGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScbId {
            get {
                return this.ScbIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ScbIdField, value) != true)) {
                    this.ScbIdField = value;
                    this.RaisePropertyChanged("ScbId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SearchListOptimizing.MicroServiceProxy.SearchVariable[] SearchVariables {
            get {
                return this.SearchVariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchVariablesField, value) != true)) {
                    this.SearchVariablesField = value;
                    this.RaisePropertyChanged("SearchVariables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchVariable", Namespace="http://scb.se/il/contract/Client/2012/09")]
    [System.SerializableAttribute()]
    public partial class SearchVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://scb.se/il/contract/MicroClient/2015/11", ConfigurationName="MicroServiceProxy.IILMicroService")]
    public interface IILMicroService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/AddSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/AddSurveyNoteRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        SearchListOptimizing.MicroServiceProxy.SurveyNote AddSurveyNote(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/AddSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/AddSurveyNoteRespon" +
            "se")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote> AddSurveyNoteAsync(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteSurveyNoteByI" +
            "d", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteSurveyNoteByI" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void DeleteSurveyNoteById(long surveyNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteSurveyNoteByI" +
            "d", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteSurveyNoteByI" +
            "dResponse")]
        System.Threading.Tasks.Task DeleteSurveyNoteByIdAsync(long surveyNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteImportedSurve" +
            "yNotesBySurveyId", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteImportedSurve" +
            "yNotesBySurveyIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void DeleteImportedSurveyNotesBySurveyId(System.Guid surveyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteImportedSurve" +
            "yNotesBySurveyId", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeleteImportedSurve" +
            "yNotesBySurveyIdResponse")]
        System.Threading.Tasks.Task DeleteImportedSurveyNotesBySurveyIdAsync(System.Guid surveyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSurveyNotes", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSurveyNotesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        SearchListOptimizing.MicroServiceProxy.SurveyNote[] GetSurveyNotes(System.Guid surveyId, string SCBId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSurveyNotes", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSurveyNotesRespo" +
            "nse")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote[]> GetSurveyNotesAsync(System.Guid surveyId, string SCBId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/UpdateSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/UpdateSurveyNoteRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        SearchListOptimizing.MicroServiceProxy.SurveyNote UpdateSurveyNote(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/UpdateSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/UpdateSurveyNoteRes" +
            "ponse")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote> UpdateSurveyNoteAsync(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ImportSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ImportSurveyNoteRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void ImportSurveyNote(System.Guid surveryId, System.DateTime createdDate, string note, string scbId, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ImportSurveyNote", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ImportSurveyNoteRes" +
            "ponse")]
        System.Threading.Tasks.Task ImportSurveyNoteAsync(System.Guid surveryId, System.DateTime createdDate, string note, string scbId, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetPeriodicOverview" +
            "", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetPeriodicOverview" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview GetPeriodicOverview(System.Guid collectionRoundId, string scbId, System.DateTime referenceStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetPeriodicOverview" +
            "", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetPeriodicOverview" +
            "Response")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview> GetPeriodicOverviewAsync(System.Guid collectionRoundId, string scbId, System.DateTime referenceStartDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetAnswerCollection" +
            "s", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetAnswerCollection" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview GetAnswerCollections(System.Guid collectionRoundId, string scbId, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetAnswerCollection" +
            "s", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetAnswerCollection" +
            "sResponse")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview> GetAnswerCollectionsAsync(System.Guid collectionRoundId, string scbId, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ActivateAnswerColle" +
            "ction", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ActivateAnswerColle" +
            "ctionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void ActivateAnswerCollection(System.Guid collectionRoundId, System.Guid coIdToActivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ActivateAnswerColle" +
            "ction", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/ActivateAnswerColle" +
            "ctionResponse")]
        System.Threading.Tasks.Task ActivateAnswerCollectionAsync(System.Guid collectionRoundId, System.Guid coIdToActivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeactivateAnswerCol" +
            "lection", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeactivateAnswerCol" +
            "lectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void DeactivateAnswerCollection(System.Guid collectionRoundId, System.Guid coIdToDeactivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeactivateAnswerCol" +
            "lection", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/DeactivateAnswerCol" +
            "lectionResponse")]
        System.Threading.Tasks.Task DeactivateAnswerCollectionAsync(System.Guid collectionRoundId, System.Guid coIdToDeactivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/CreateNewColletionO" +
            "ccasionFromMergedResult", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/CreateNewColletionO" +
            "ccasionFromMergedResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SearchListOptimizing.MicroServiceProxy.ErrorDetail), Action="FaultAction", Name="ErrorDetail", Namespace="http://scb.se/ide/datacontract/2011/12")]
        void CreateNewColletionOccasionFromMergedResult(System.Guid collectionRoundId, System.Guid collectionUnitId, SearchListOptimizing.MicroServiceProxy.AnswerCollection answerCollection, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/CreateNewColletionO" +
            "ccasionFromMergedResult", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/CreateNewColletionO" +
            "ccasionFromMergedResultResponse")]
        System.Threading.Tasks.Task CreateNewColletionOccasionFromMergedResultAsync(System.Guid collectionRoundId, System.Guid collectionUnitId, SearchListOptimizing.MicroServiceProxy.AnswerCollection answerCollection, string createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSearchListItems", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSearchListItemsR" +
            "esponse")]
        SearchListOptimizing.MicroServiceProxy.SearchListItem[] GetSearchListItems(System.Guid collectionRoundId, string[] searchVariables);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSearchListItems", ReplyAction="http://scb.se/il/contract/MicroClient/2015/11/IILMicroService/GetSearchListItemsR" +
            "esponse")]
        System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SearchListItem[]> GetSearchListItemsAsync(System.Guid collectionRoundId, string[] searchVariables);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IILMicroServiceChannel : SearchListOptimizing.MicroServiceProxy.IILMicroService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ILMicroServiceClient : System.ServiceModel.ClientBase<SearchListOptimizing.MicroServiceProxy.IILMicroService>, SearchListOptimizing.MicroServiceProxy.IILMicroService {
        
        public ILMicroServiceClient() {
        }
        
        public ILMicroServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ILMicroServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ILMicroServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ILMicroServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SearchListOptimizing.MicroServiceProxy.SurveyNote AddSurveyNote(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote) {
            return base.Channel.AddSurveyNote(surveyNote);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote> AddSurveyNoteAsync(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote) {
            return base.Channel.AddSurveyNoteAsync(surveyNote);
        }
        
        public void DeleteSurveyNoteById(long surveyNoteId) {
            base.Channel.DeleteSurveyNoteById(surveyNoteId);
        }
        
        public System.Threading.Tasks.Task DeleteSurveyNoteByIdAsync(long surveyNoteId) {
            return base.Channel.DeleteSurveyNoteByIdAsync(surveyNoteId);
        }
        
        public void DeleteImportedSurveyNotesBySurveyId(System.Guid surveyId) {
            base.Channel.DeleteImportedSurveyNotesBySurveyId(surveyId);
        }
        
        public System.Threading.Tasks.Task DeleteImportedSurveyNotesBySurveyIdAsync(System.Guid surveyId) {
            return base.Channel.DeleteImportedSurveyNotesBySurveyIdAsync(surveyId);
        }
        
        public SearchListOptimizing.MicroServiceProxy.SurveyNote[] GetSurveyNotes(System.Guid surveyId, string SCBId) {
            return base.Channel.GetSurveyNotes(surveyId, SCBId);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote[]> GetSurveyNotesAsync(System.Guid surveyId, string SCBId) {
            return base.Channel.GetSurveyNotesAsync(surveyId, SCBId);
        }
        
        public SearchListOptimizing.MicroServiceProxy.SurveyNote UpdateSurveyNote(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote) {
            return base.Channel.UpdateSurveyNote(surveyNote);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SurveyNote> UpdateSurveyNoteAsync(SearchListOptimizing.MicroServiceProxy.SurveyNote surveyNote) {
            return base.Channel.UpdateSurveyNoteAsync(surveyNote);
        }
        
        public void ImportSurveyNote(System.Guid surveryId, System.DateTime createdDate, string note, string scbId, string user) {
            base.Channel.ImportSurveyNote(surveryId, createdDate, note, scbId, user);
        }
        
        public System.Threading.Tasks.Task ImportSurveyNoteAsync(System.Guid surveryId, System.DateTime createdDate, string note, string scbId, string user) {
            return base.Channel.ImportSurveyNoteAsync(surveryId, createdDate, note, scbId, user);
        }
        
        public SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview GetPeriodicOverview(System.Guid collectionRoundId, string scbId, System.DateTime referenceStartDate) {
            return base.Channel.GetPeriodicOverview(collectionRoundId, scbId, referenceStartDate);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview> GetPeriodicOverviewAsync(System.Guid collectionRoundId, string scbId, System.DateTime referenceStartDate) {
            return base.Channel.GetPeriodicOverviewAsync(collectionRoundId, scbId, referenceStartDate);
        }
        
        public SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview GetAnswerCollections(System.Guid collectionRoundId, string scbId, string query) {
            return base.Channel.GetAnswerCollections(collectionRoundId, scbId, query);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.CollectionUnitPeriodOverview> GetAnswerCollectionsAsync(System.Guid collectionRoundId, string scbId, string query) {
            return base.Channel.GetAnswerCollectionsAsync(collectionRoundId, scbId, query);
        }
        
        public void ActivateAnswerCollection(System.Guid collectionRoundId, System.Guid coIdToActivate) {
            base.Channel.ActivateAnswerCollection(collectionRoundId, coIdToActivate);
        }
        
        public System.Threading.Tasks.Task ActivateAnswerCollectionAsync(System.Guid collectionRoundId, System.Guid coIdToActivate) {
            return base.Channel.ActivateAnswerCollectionAsync(collectionRoundId, coIdToActivate);
        }
        
        public void DeactivateAnswerCollection(System.Guid collectionRoundId, System.Guid coIdToDeactivate) {
            base.Channel.DeactivateAnswerCollection(collectionRoundId, coIdToDeactivate);
        }
        
        public System.Threading.Tasks.Task DeactivateAnswerCollectionAsync(System.Guid collectionRoundId, System.Guid coIdToDeactivate) {
            return base.Channel.DeactivateAnswerCollectionAsync(collectionRoundId, coIdToDeactivate);
        }
        
        public void CreateNewColletionOccasionFromMergedResult(System.Guid collectionRoundId, System.Guid collectionUnitId, SearchListOptimizing.MicroServiceProxy.AnswerCollection answerCollection, string createdBy) {
            base.Channel.CreateNewColletionOccasionFromMergedResult(collectionRoundId, collectionUnitId, answerCollection, createdBy);
        }
        
        public System.Threading.Tasks.Task CreateNewColletionOccasionFromMergedResultAsync(System.Guid collectionRoundId, System.Guid collectionUnitId, SearchListOptimizing.MicroServiceProxy.AnswerCollection answerCollection, string createdBy) {
            return base.Channel.CreateNewColletionOccasionFromMergedResultAsync(collectionRoundId, collectionUnitId, answerCollection, createdBy);
        }
        
        public SearchListOptimizing.MicroServiceProxy.SearchListItem[] GetSearchListItems(System.Guid collectionRoundId, string[] searchVariables) {
            return base.Channel.GetSearchListItems(collectionRoundId, searchVariables);
        }
        
        public System.Threading.Tasks.Task<SearchListOptimizing.MicroServiceProxy.SearchListItem[]> GetSearchListItemsAsync(System.Guid collectionRoundId, string[] searchVariables) {
            return base.Channel.GetSearchListItemsAsync(collectionRoundId, searchVariables);
        }
    }
}
